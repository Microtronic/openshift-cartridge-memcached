#!/bin/bash -e

source $OPENSHIFT_CARTRIDGE_SDK_BASH
export STOPTIMEOUT=20

function read_pid() {
    if [ -f $OPENSHIFT_MEMCACHED_DIR/pid/memcached.pid ]; then
        echo $(<$OPENSHIFT_MEMCACHED_DIR/pid/memcached.pid)
    fi
}

function isrunning() {
    local pid=`read_pid`
    kill -0 "$pid" 2>/dev/null || return 1
    return 0
}

function _wait_for_memcached_to_startup() {
    for ((i=0; i<20; i++)); do
        if [ -f ${OPENSHIFT_MEMCACHED_DIR}/pid/memcached.pid ]; then
            if [ "$DISABLE_SASL" != "1" ]; then
                return
            fi
            if memcached-tool $OPENSHIFT_MEMCACHED_HOST:$OPENSHIFT_MEMCACHED_PORT &>/dev/null; then
                return
            fi
        fi
        sleep 1
    done
}

function start() {
    if ! isrunning
    then
        source $OPENSHIFT_MEMCACHED_DIR/conf/memcached.conf
        if [ "$DISABLE_SASL" != "1" ]; then
            export MEMCACHED_SASL_PWDB=$OPENSHIFT_DATA_DIR/conf/sasldb
            OPTIONS="$OPTIONS -S"
        fi
        memcached -d -p $OPENSHIFT_MEMCACHED_PORT -U 0 -l $OPENSHIFT_MEMCACHED_HOST -u `id -u` -m $CACHESIZE -c $MAXCONN -P $OPENSHIFT_MEMCACHED_DIR/pid/memcached.pid $OPTIONS 2>&1 1>>$OPENSHIFT_MEMCACHED_DIR/logs/error-$(date '+%Y%m%d-%H%M%S-%Z').log
        _wait_for_memcached_to_startup
    else
        client_result "Memcached already running"
    fi
}

function stop() {
    local pid=`read_pid`

    if [ -n "$pid" ]; then
        if kill "$pid" 2>/dev/null; then
            TIMEOUT="$STOPTIMEOUT"
            while [ $TIMEOUT -gt 0 -a -f "$OPENSHIFT_MEMCACHED_DIR/pid/memcached.pid" ]; do
                kill -0 "$pid" 2>/dev/null || break
                sleep 1
                let TIMEOUT=${TIMEOUT}-1
            done
            /bin/rm -f $OPENSHIFT_MEMCACHED_DIR/pid/memcached.pid
        fi
    else
        if `pgrep -x memcached >/dev/null 2>&1`
        then
            client_message "Memcached process exists without a pid file. Use force-stop to kill."
        else
            client_result "Memcached already stopped"
        fi
     fi
}

case "$1" in
    start)
        start
    ;;
    stop)
        stop
    ;;
    restart)
        stop
        start
    ;;
    status)
        if isrunning
        then
            client_result "Memcached is running"
        else
            client_result "Memcached is stopped"
        fi
        exit 0
    ;;
esac
